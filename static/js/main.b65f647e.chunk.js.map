{"version":3,"sources":["App.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLint.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","_ref","isActive","classNames","App","_jsxs","children","_jsx","className","role","NavLink","to","Outlet","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","Link","concat","PeoplePage","_useState","useState","_useState2","_slicedToArray","people","setPeople","_useState3","_useState4","isError","setIsError","_useState5","_useState6","isLoading","setIsLoading","selectedSlug","useParams","useEffect","catch","finally","_Fragment","length","map","born","died","fatherName","motherName","mother","find","mom","father","dad","NotFoundPage","Root","Router","Routes","Route","path","element","index","Navigate","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b65f647e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', { 'has-background-grey-lighter': isActive });\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={getLinkClass}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={getLinkClass}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PersonLink } from '../PersonLink/PersonLint';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const { slug: selectedSlug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {\n            isLoading && (\n              <Loader />\n            )\n          }\n\n          {\n            isError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )\n          }\n\n          {\n            !isError && !isLoading && !people.length && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )\n          }\n\n          {\n            !isError && !isLoading && !!people.length && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {\n                    people.map(person => {\n                      const {\n                        sex,\n                        born,\n                        died,\n                        fatherName,\n                        motherName,\n                        slug,\n                      } = person;\n\n                      const mother = people\n                        .find(mom => mom.name === motherName);\n                      const father = people\n                        .find(dad => dad.name === fatherName);\n\n                      return (\n                        <tr\n                          data-cy=\"person\"\n                          className={classNames({\n                            'has-background-warning': slug === selectedSlug,\n                          })}\n                        >\n                          <td>\n                            <PersonLink person={person} />\n                          </td>\n\n                          <td>{sex}</td>\n                          <td>{born}</td>\n                          <td>{died}</td>\n                          <td>\n                            {\n                              (mother && (\n                                <PersonLink person={mother} />\n                              ))\n                              || (motherName && (\n                                motherName\n                              ))\n                              || '-'\n                            }\n                          </td>\n                          <td>\n                            {\n                              (father && (\n                                <PersonLink person={father} />\n                              ))\n                              || (fatherName && (\n                                fatherName\n                              ))\n                              || '-'\n                            }\n                          </td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n            )\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}